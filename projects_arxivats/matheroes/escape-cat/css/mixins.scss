/**MIXINS**/
@mixin transition($transitions){
  -webkit-transition: $transitions;
  -moz-transition: $transitions;
  -ms-transform: $transitions;
  -o-transition: $transitions;
  transition: $transitions;
}
@mixin animation($animations){
  -webkit-animation: $animations;
  -moz-animation: $animations;
  -ms-animation: $animations;
  -o-animation: $animations;
  animation: $animations;
}
@mixin animation-duration($animation-duration){
  -webkit-animation-duration: $animation-duration;
  -moz-animation-duration: $animation-duration;
  -ms-animation-duration: $animation-duration;
  -o-animation-duration: $animation-duration;
  animation-duration: $animation-duration;
}
@mixin animation-fill-mode($animation-fill-mode){
  -webkit-animation-fill-mode: $animation-fill-mode;
  -moz-animation-fill-mode: $animation-fill-mode;
  -ms-animation-fill-mode: $animation-fill-mode;
  -o-animation-fill-mode: $animation-fill-mode;
  animation-fill-mode: $animation-fill-mode;
}
@mixin animation-delay($animation-delay){
  -webkit-animation-delay: $animation-delay;
  -moz-animation-delay: $animation-delay;
  -ms-animation-delay: $animation-delay;
  -o-animation-delay: $animation-delay;
  animation-delay: $animation-delay;
}
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}
@mixin transform-origin ($origin) {
    -webkit-transform-origin: $origin;
    -moz-transform-origin: $origin;
    -ms-transform-origin: $origin;
    transform-origin: $origin;
}
@mixin transform-style($style) {
  -webkit-transform-style: $style;
  -moz-transform-style: $style;
  -ms-transform-style: $style;
  transform-style: $style;
}
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
@mixin text-shadow($x, $y, $blur, $color) {
  -webkit-text-shadow: $x $y $blur $color;
  -moz-text-shadow: $x $y $blur $color;
  text-shadow: $x $y $blur $color;
}
@mixin shadow($x, $y, $blur, $color) {
  -webkit-box-shadow: $x $y $blur $color;
  -moz-box-shadow: $x $y $blur $color;
  box-shadow: $x $y $blur $color;
}
@mixin apearance($apearance){
  -webkit-appearance: $apearance;
  -o-appearance: $apearance;
  -ms-appearance: $apearance;
  -moz-appearance: $apearance;
  appearance: $apearance;
}
@mixin column-gap($colum-gap){
  -webkit-column-gap: $colum-gap;
  -o-column-gap: $colum-gap;
  -ms-column-gap: $colum-gap;
  -moz-column-gap: $colum-gap;
  column-gap: $colum-gap;
}
@mixin x-user-select ($value) {
	-webkit-user-select: $value;
	   -moz-user-select: $value;
	    -ms-user-select: $value;
	        user-select: $value;
}
@mixin backface-visibility($value) {
  -webkit-backface-visibility: $value;
     -moz-backface-visibility: $value;
      backface-visibility: $value;
}
@mixin horizontal-gradient($from, $to, $stop: 100%) {
  background-color: $from;
  background-image: -moz-linear-gradient(left, $from 0%, $to $stop);
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, $from), color-stop($stop, $to));
  background-image: -webkit-linear-gradient(left, $from 0%, $to $stop);
  background-image: -o-linear-gradient(left, $from 0%, $to $stop);
  background: -ms-linear-gradient(left, $from 0%, $to $stop);
  background: linear-gradient(to right, $from 0%, $to $stop);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$from', endColorstr='$to',GradientType=1 );
}
@mixin gradient-directional($start-color: #555, $end-color: #333, $deg: 45deg) {
  background-repeat: repeat-x;
  background-image: -webkit-linear-gradient($deg, $start-color, $end-color); // Safari 5.1-6, Chrome 10+
  background-image: -o-linear-gradient($deg, $start-color, $end-color); // Opera 12
  background-image: linear-gradient($deg, $start-color, $end-color); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
}
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}


@mixin gradient-horizontal($startColor: #555, $endColor: #333) {
  background-color: $endColor;
  background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
  background-image: -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
  background-image: linear-gradient(to right, $startColor, $endColor); // Standard, IE10
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=1); // IE9 and down
}
@mixin gradient-vertical($startColor: #555, $endColor: #333) {
  background-color: mix($startColor, $endColor, 60%);
  background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
  background-image: linear-gradient(to bottom, $startColor, $endColor); // Standard, IE10
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down
}


@mixin responsive($media) {
  @if $media == responsive1600 {
    @media only screen and (max-width: $responsive1600) { @content; }
  }
  @else if $media == responsive1360 {
    @media only screen and (max-width: $responsive1360) { @content; }
  }
  @else if $media == responsive1199 {
    @media only screen and (max-width: $responsive1199) { @content; }
  }
  @else if $media == responsive991 {
    @media only screen and (max-width: $responsive991) { @content; }
  }
  @else if $media == responsive767 {
    @media only screen and (max-width: $responsive767) { @content; }
  }
  @else if $media == responsive600 {
    @media only screen and (max-width: $responsive600) { @content; }
  }
  @else if $media == responsive480 {
    @media only screen and (max-width: $responsive480) { @content; }
  }
}
